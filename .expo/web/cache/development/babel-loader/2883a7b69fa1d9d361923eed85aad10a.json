{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\momentoDosZabala\\\\citasMedecas\\\\screens\\\\create-dates\\\\createdates.js\";\nimport { updateGroupNameAsync } from 'expo-contacts';\nimport React, { useEffect, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, TouchableHighlight } from 'react-native-gesture-handler';\n\nfunction createDates(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      identification = _useState2[0],\n      setidentification = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setname = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastname = _useState6[0],\n      setlastname = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      birthdate = _useState8[0],\n      setbirthdate = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      city = _useState10[0],\n      setcity = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      neighborhood = _useState12[0],\n      setneighborhood = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      phone = _useState14[0],\n      setphone = _useState14[1];\n\n  var createDates = function createDates() {\n    var response, Json;\n    return _regeneratorRuntime.async(function createDates$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://localhost:5000/dates', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                lastname: lastname,\n                identification: identification,\n                birthdate: birthdate,\n                city: city,\n                neighborhood: neighborhood,\n                phone: phone\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            Json = _context.sent;\n            Alert.alert(\"La cita fue agendada. \");\n            navigation.goBack();\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setidentification(text);\n    },\n    placeholder: \"Identificacion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setname(text);\n    },\n    placeholder: \"Nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setlastname(text);\n    },\n    placeholder: \"Apellido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setbirthdate(text);\n    },\n    placeholder: \"Fecha de nacimiento\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setcity(text);\n    },\n    placeholder: \"Ciudad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setneighborhood(text);\n    },\n    placeholder: \"Barrio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setphone(text);\n    },\n    placeholder: \"Telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: styles.styleButton,\n    onPress: createDates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textCreateButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Create Dates\")));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  textInput: {\n    marginTop: 5,\n    padding: 15,\n    borderColor: 'black',\n    borderRadius: 5,\n    borderWidth: 1,\n    width: Dimensions.get('screen').width * 0.9\n  },\n  styleButton: {\n    backgroundColor: 'grey',\n    padding: 15,\n    alignItems: 'center',\n    marginTop: 10,\n    borderRadius: 20\n  },\n  textCreateButton: {\n    color: 'white'\n  }\n});\nexport default createDates;","map":{"version":3,"sources":["C:/Users/Usuario/Documents/GitHub/momentoDosZabala/citasMedecas/screens/create-dates/createdates.js"],"names":["updateGroupNameAsync","React","useEffect","useState","TextInput","TouchableHighlight","createDates","navigation","identification","setidentification","name","setname","lastname","setlastname","birthdate","setbirthdate","city","setcity","neighborhood","setneighborhood","phone","setphone","fetch","method","headers","Accept","body","JSON","stringify","response","json","Json","Alert","alert","goBack","styles","container","textInput","text","styleButton","textCreateButton","StyleSheet","create","flex","backgroundColor","flexDirection","alignItems","marginTop","padding","borderColor","borderRadius","borderWidth","width","Dimensions","get","color"],"mappings":"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","sourcesContent":["import { updateGroupNameAsync } from 'expo-contacts';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Alert, Dimensions, StyleSheet, Text, View } from 'react-native';\r\nimport { TextInput, TouchableHighlight } from 'react-native-gesture-handler';\r\n\r\n\r\nfunction createDates({ navigation }) {\r\n    const [identification, setidentification] = useState();\r\n    const [name, setname] = useState(\"\");\r\n    const [lastname, setlastname] = useState(\"\");\r\n    const [birthdate, setbirthdate] = useState(\"\");\r\n    const [city, setcity] = useState(\"\");\r\n    const [neighborhood, setneighborhood] = useState(\"\");\r\n    const [phone, setphone] = useState();\r\n    const createDates = async () => {\r\n        try {\r\n            const response = await fetch('https://localhost:5000/dates', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    name: name,\r\n                    lastname: lastname,\r\n                    identification: identification,\r\n                    birthdate: birthdate,\r\n                    city: city,\r\n                    neighborhood: neighborhood,\r\n                    phone: phone\r\n                })\r\n            });\r\n\r\n            const Json = await response.json();\r\n            Alert.alert(\"La cita fue agendada. \")\r\n            navigation.goBack();\r\n        } catch (error) {\r\n                Alert.alert(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TextInput style={styles.textInput} onChangeText={text => setidentification(text)} placeholder=\"Identificacion\"></TextInput>\r\n            <TextInput style={styles.textInput} onChangeText={text => setname(text)} placeholder=\"Nombre\"></TextInput>\r\n            <TextInput style={styles.textInput} onChangeText={text => setlastname(text)} placeholder=\"Apellido\"></TextInput>\r\n            <TextInput style={styles.textInput} onChangeText={text => setbirthdate(text)} placeholder=\"Fecha de nacimiento\"></TextInput>\r\n            <TextInput style={styles.textInput} onChangeText={text => setcity(text)} placeholder=\"Ciudad\"></TextInput>\r\n            <TextInput style={styles.textInput} onChangeText={text => setneighborhood(text)} placeholder=\"Barrio\"></TextInput>\r\n            <TextInput style={styles.textInput} onChangeText={text => setphone(text)} placeholder=\"Telefono\"></TextInput>\r\n            <TouchableHighlight style={styles.styleButton} onPress={createDates} >\r\n                <Text style={styles.textCreateButton}>Create Dates</Text>\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    textInput: {\r\n        marginTop: 5,\r\n        padding: 15,\r\n        borderColor: 'black',\r\n        borderRadius: 5,\r\n        borderWidth: 1,\r\n        width: Dimensions.get('screen').width * 0.9\r\n    },\r\n    styleButton: {\r\n        backgroundColor: 'grey',\r\n        padding: 15,\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n        borderRadius: 20\r\n    },\r\n    textCreateButton: {\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nexport default createDates;"]},"metadata":{},"sourceType":"module"}